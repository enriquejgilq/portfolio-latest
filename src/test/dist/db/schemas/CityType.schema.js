"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CityTypeModel = exports.CityTypeSchema = void 0;
const mongoose_1 = require("mongoose");
exports.CityTypeSchema = new mongoose_1.Schema({
    countryid: { type: mongoose_1.Schema.Types.ObjectId },
    is_hide: { type: Number, default: 1 },
    surge_multiplier: { type: Number, default: 0 },
    surge_start_hour: { type: Number, default: 0 },
    surge_end_hour: { type: Number, default: 0 },
    is_surge_hours: { type: Number, default: 0 },
    is_zone: { type: Number, default: 0 },
    rich_area_surge: { type: Array, default: [] },
    surge_hours: {
        type: Array,
        default: [
            { is_surge: false, day: '0', day_time: [] },
            { is_surge: false, day: '1', day_time: [] },
            { is_surge: false, day: '2', day_time: [] },
            { is_surge: false, day: '3', day_time: [] },
            { is_surge: false, day: '4', day_time: [] },
            { is_surge: false, day: '5', day_time: [] },
            { is_surge: false, day: '6', day_time: [] },
        ],
    },
    is_business: { type: Number, default: 1 },
    countryname: { type: String, default: '' },
    cityid: { type: mongoose_1.Schema.Types.ObjectId },
    cityname: { type: String, default: '' },
    typeid: { type: mongoose_1.Schema.Types.ObjectId },
    type_image: { type: String, default: '' },
    min_fare: { type: Number, default: 0 },
    provider_profit: { type: Number, default: 0 },
    typename: { type: String, default: '' },
    city_id: { type: mongoose_1.Schema.Types.ObjectId },
    is_car_rental_business: { type: Number, default: 0 },
    car_rental_ids: [{ type: mongoose_1.Schema.Types.ObjectId, default: [] }],
    base_price_distance: { type: Number, default: 0 },
    base_price_time: { type: Number, default: 0 },
    base_price: { type: Number, default: 0 },
    price_per_unit_distance: { type: Number, default: 0 },
    price_for_total_time: { type: Number, default: 0 },
    waiting_time_start_after_minute: { type: Number, default: 0 },
    price_for_waiting_time: { type: Number, default: 0 },
    waiting_time_start_after_minute_multiple_stops: {
        type: Number,
        default: 0,
    },
    price_for_waiting_time_multiple_stops: { type: Number, default: 0 },
    tax: { type: Number, default: 0 },
    max_space: { type: Number, default: 0 },
    cancellation_fee: { type: Number, default: 0 },
    user_miscellaneous_fee: { type: Number, default: 0 },
    provider_miscellaneous_fee: { type: Number, default: 0 },
    user_tax: { type: Number, default: 0 },
    provider_tax: { type: Number, default: 0 },
    is_ride_share: { type: Number, default: 0 },
    model_pricing_ids: [{ type: mongoose_1.Schema.Types.ObjectId, default: [] }],
    modelid: { type: Array, default: [] },
    serviceid: { type: Array, default: [] },
    capacityid: { type: Array, default: [] },
    price_per_km_a: { type: Number, default: 0 },
    price_per_km_b: { type: Number, default: 0 },
    price_per_km_c: { type: Number, default: 0 },
    price_per_km_d: { type: Number, default: 0 },
    price_per_km_e: { type: Number, default: 0 },
    price_per_km_f: { type: Number, default: 0 },
    price_per_km_g: { type: Number, default: 0 },
    price_per_km_h: { type: Number, default: 0 },
    price_per_km_i: { type: Number, default: 0 },
    price_per_km_j: { type: Number, default: 0 },
    price_per_km_k: { type: Number, default: 0 },
    price_per_km_l: { type: Number, default: 0 },
    price_per_km_m: { type: Number, default: 0 },
    price_per_km_n: { type: Number, default: 0 },
    price_per_km_o: { type: Number, default: 0 },
    price_per_km_p: { type: Number, default: 0 },
    price_per_km_q: { type: Number, default: 0 },
    price_per_km_r: { type: Number, default: 0 },
    price_per_km_s: { type: Number, default: 0 },
    price_per_km_t: { type: Number, default: 0 },
    price_per_km_u: { type: Number, default: 0 },
    price_per_km_v: { type: Number, default: 0 },
    price_per_km_w: { type: Number, default: 0 },
    price_per_km_y: { type: Number, default: 0 },
    cost_per_stop_inside_city: { type: Number, default: 0 },
    cost_per_stop_outside_city: { type: Number, default: 0 },
    cost_per_helper: { type: Number, default: 0 },
    cost_travel_insurance: { type: Number, default: 0 },
    fixed_fees: { type: Number, default: 0 },
    model_type: { type: Number, default: 0 },
    user_type_id: { type: mongoose_1.Schema.Types.ObjectId },
    user_type: { type: Number, default: 0 },
    free_stops: { type: Number, default: 2 },
    created_at: { type: Date, default: Date.now },
    updated_at: { type: Date, default: Date.now },
    zone_ids: [{ type: mongoose_1.Schema.Types.ObjectId, default: [] }],
    night_shift: { type: Number, default: 0 },
    boat_ticket: { type: Number, default: 0 },
}, { timestamps: true, collection: 'city_types' });
exports.CityTypeSchema.index({ created_at: 1 }, { background: true });
exports.CityTypeSchema.index({ countryid: 1, cityid: 1, is_business: 1 }, { background: true });
exports.CityTypeModel = (0, mongoose_1.model)('CityType', exports.CityTypeSchema);
//# sourceMappingURL=CityType.schema.js.map